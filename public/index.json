[{"body":"","link":"https://example.com/","section":"","tags":null,"title":""},{"body":"","link":"https://example.com/categories/","section":"categories","tags":null,"title":"Categories"},{"body":"","link":"https://example.com/tags/cloudflareworkers/","section":"tags","tags":null,"title":"CloudflareWorkers"},{"body":"","link":"https://example.com/posts/","section":"posts","tags":null,"title":"Posts"},{"body":"","link":"https://example.com/post/","section":"post","tags":["index"],"title":"Posts"},{"body":"","link":"https://example.com/series/","section":"series","tags":null,"title":"Series"},{"body":"","link":"https://example.com/tags/","section":"tags","tags":null,"title":"Tags"},{"body":"","link":"https://example.com/series/%E5%87%BA%E5%9F%83%E5%8F%8A/","section":"series","tags":null,"title":"出埃及"},{"body":"你没看错，免费实现永久自由网络！\n很不幸，有很多人所处的世界是一个不自由的世界，不但在现实世界不自由，网络上也不能自由活动！好在灵魂是自由的，当然如果你的灵魂也被控制了，那太可怕了……，不过你也不用害怕，让我帮你先实现网络自由，灵魂自由就有希望了！\n一、配置 第一步，注册Cloudflare帐号 打开官网：https://www.cloudflare.com/zh-cn/，注册，登录，这些不就详细介绍了，只要一个邮箱就能实现\n第二步，创建Workers 在左侧菜单点\u0026quot;Workers和Pages\u0026quot;——创建Workers\n第三步，部署 第四步，修改代码 点“编辑代码”，修改成zizifn大佬的代码：https://github.com/zizifn/edgetunnel/blob/main/src/worker-vless.js\n备用地址 （如果你打开不github的话，可以试试从onedrive下载worker-vless.js文件）\n删除默认的代码，复制上面链接的代码\n注意几个地方：\n1，第7行的ID，随便找个UUID替换\n2，第9行的IP，可以找前辈们提供的，随便在下面的列表中找一个\ncdn-all.xn--b6gac.eu.org cdn.xn--b6gac.eu.org cdn-b100.xn--b6gac.eu.org edgetunnel.anycast.eu.org cdn.anycast.eu.org 保存并部署\n​\t修改好之后，点击右上角的“保存并部署”，点击之后没有提示保存成功，但是实际上已经保存并帮你部署好了。\n至此反代已完成\n使用 第一步，找到你的反代地址 第二步，加上你上面的UUID，得到一个完整的Vless地址 比如我的：https://mailberry.sosel-dfd.workers.dev/868e7e9a-e3fe-407e-bbb9-3d128a9ac51b\n第三步，得到了V2ray 和clash的节点配置代码，由于workers.dev这个域名已被墙，直接使用是不行的，还要下一步 第四步，优选IP 直接使用线上优选\nCF在线优选IP：https://vfarid.github.io/cf-ip-scanner/?max=30\n这里我随便优选几个IP测试一下\n把优选的IP地址填到地址。 把端口改成80，当然，你也可以使用2052， 把TLS改成空，因为我们没有绑定域名，也没有TLS 这样就能正常使用了。\n还有一种是有自定议域名的配置，可以使用TLS，也能使用443，更优方案，但不是本文的重点，略过\n三：进阶 目前使用的反代IP已被滥用，考虑进阶优选一批第三方IP，这些IP太多人在使用，稳定性和速度都不大行，下期介绍第三方优选IP;还有绑定自定义域名，解决官方域名被墙，被污染，很多地方未必能正常长久连接问题。\n总结 通过利用CF提供的免费workers和借鉴其他专家的智慧，我们不仅仅解决了上外网的难题，还找到了更多创新的方法。这些方法包括使用代理服务器或者云计算等技术手段来实现上外网，让大众用上了免费节点，赞。\n参考原文：https://mailberry.com.cn/2023/07/use-cloudflare-workers-to-vless/\n","link":"https://example.com/post/network/%E5%88%A9%E7%94%A8cloudflareworkers%E5%8F%8D%E4%BB%A3%E5%BD%93%E8%8A%82%E7%82%B9%E5%85%8D%E8%B4%B9%E5%AE%9E%E7%8E%B0%E6%B0%B8%E4%B9%85%E8%87%AA%E7%94%B1%E7%BD%91%E7%BB%9C/","section":"post","tags":["CloudflareWorkers","免费vless节点"],"title":"利用CloudFlare Workers反代当节点，免费实现永久自由网络"},{"body":"你没看错，免费实现永久自由网络！\n很不幸，有很多人所处的世界是一个不自由的世界，不但在现实世界不自由，网络上也不能自由活动！好在灵魂是自由的，当然如果你的灵魂也被控制了，那太可怕了……，不过你也不用害怕，让我帮你先实现网络自由，灵魂自由就有希望了！\n一、配置 第一步，注册Cloudflare帐号 打开官网：https://www.cloudflare.com/zh-cn/，注册，登录，这些不就详细介绍了，只要一个邮箱就能实现\n第二步，创建Workers 在左侧菜单点\u0026quot;Workers和Pages\u0026quot;——创建Workers\n第三步，部署 第四步，修改代码 点“编辑代码”，修改成zizifn大佬的代码：https://github.com/zizifn/edgetunnel/blob/main/src/worker-vless.js\n备用地址 （如果你打开不github的话，可以试试从onedrive下载worker-vless.js文件）\n删除默认的代码，复制上面链接的代码\n注意几个地方：\n1，第7行的ID，随便找个UUID替换\n2，第9行的IP，可以找前辈们提供的，随便在下面的列表中找一个\ncdn-all.xn--b6gac.eu.org cdn.xn--b6gac.eu.org cdn-b100.xn--b6gac.eu.org edgetunnel.anycast.eu.org cdn.anycast.eu.org 保存并部署\n​\t修改好之后，点击右上角的“保存并部署”，点击之后没有提示保存成功，但是实际上已经保存并帮你部署好了。\n至此反代已完成\n二、使用 第一步，找到你的反代地址 第二步，加上你上面的UUID，得到一个完整的Vless地址 比如我的：https://mailberry.sosel-dfd.workers.dev/868e7e9a-e3fe-407e-bbb9-3d128a9ac51b\n第三步，得到了V2ray 和clash的节点配置代码，由于workers.dev这个域名已被墙，直接使用是不行的，还要下一步 第四步，优选IP 直接使用线上优选\nCF在线优选IP：https://vfarid.github.io/cf-ip-scanner/?max=30\n这里我随便优选几个IP测试一下\n把优选的IP地址填到地址。 把端口改成80，当然，你也可以使用2052， 把TLS改成空，因为我们没有绑定域名，也没有TLS 这样就能正常使用了。\n还有一种是有自定议域名的配置，可以使用TLS，也能使用443，更优方案，但不是本文的重点，略过\n三：进阶 目前使用的反代IP已被滥用，考虑进阶优选一批第三方IP，这些IP太多人在使用，稳定性和速度都不大行，下期介绍第三方优选IP;还有绑定自定义域名，解决官方域名被墙，被污染，很多地方未必能正常长久连接问题。\n总结 通过利用CF提供的免费workers和借鉴其他专家的智慧，我们不仅仅解决了上外网的难题，还找到了更多创新的方法。这些方法包括使用代理服务器或者云计算等技术手段来实现上外网，让大众用上了免费节点，赞。\n参考原文：https://mailberry.com.cn/2023/07/use-cloudflare-workers-to-vless/\n","link":"https://example.com/posts/network/%E5%88%A9%E7%94%A8cloudflareworkers%E5%8F%8D%E4%BB%A3%E5%BD%93%E8%8A%82%E7%82%B9%E5%85%8D%E8%B4%B9%E5%AE%9E%E7%8E%B0%E6%B0%B8%E4%B9%85%E8%87%AA%E7%94%B1%E7%BD%91%E7%BB%9C/","section":"posts","tags":["CloudflareWorkers","免费vless节点"],"title":"利用CloudFlare Workers反代当节点，免费实现永久自由网络"},{"body":"","link":"https://example.com/tags/%E5%85%8D%E8%B4%B9vless%E8%8A%82%E7%82%B9/","section":"tags","tags":null,"title":"免费vless节点"},{"body":"","link":"https://example.com/categories/%E7%BD%91%E7%BB%9C%E6%8A%80%E6%9C%AF/","section":"categories","tags":null,"title":"网络技术"},{"body":"","link":"https://example.com/post/network/hugo+github+cloudflare%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99/","section":"post","tags":null,"title":"Hugo+github+cloudflare搭建免费静态网站"},{"body":"","link":"https://example.com/posts/network/hugo+github+cloudflare%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99/","section":"posts","tags":null,"title":"Hugo+github+cloudflare搭建免费静态网站"},{"body":"","link":"https://example.com/archives/","section":"","tags":null,"title":""},{"body":"Written in Go, Hugo is an open source static site generator available under the Apache Licence 2.0. Hugo supports TOML, YAML and JSON data file types, Markdown and HTML content files and uses shortcodes to add rich content. Other notable features are taxonomies, multilingual mode, image processing, custom output formats, HTML/CSS/JS minification and support for Sass SCSS workflows.\nHugo makes use of a variety of open source projects including:\nhttps://github.com/yuin/goldmark https://github.com/alecthomas/chroma https://github.com/muesli/smartcrop https://github.com/spf13/cobra https://github.com/spf13/viper Hugo is ideal for blogs, corporate websites, creative portfolios, online magazines, single page applications or even a website with thousands of pages.\nHugo is for people who want to hand code their own website without worrying about setting up complicated runtimes, dependencies and databases.\nWebsites built with Hugo are extremelly fast, secure and can be deployed anywhere including, AWS, GitHub Pages, Heroku, Netlify and any other hosting provider.\nLearn more and contribute on GitHub.\n","link":"https://example.com/about/","section":"","tags":null,"title":"About"},{"body":"","link":"https://example.com/tags/index/","section":"tags","tags":null,"title":"index"}]